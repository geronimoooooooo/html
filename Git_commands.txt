https://about.gitlab.com/images/press/git-cheat-sheet.pdf
https://www.ionos.at/digitalguide/websites/web-entwicklung/git-cheat-sheet/
https://www.ionos.at/digitalguide/websites/web-entwicklung/git-commands/


===.gitignore===
+ Tutorial mit examples https://www.freecodecamp.org/news/gitignore-file-how-to-ignore-files-and-folders-in-git/#:~:text=gitignore%20file.-,A%20.,that%20specific%20file%20or%20folder.
+ big-data/ #ignoriert den Ordner big-data

===Set-up===
>git --version
>git config user.name <name>
>git config --global user.name <name> --- Define the author name to be used for all commits by the current user
>git config --global user.email <email> --- Define the author email to be used for all commits by the current user
>git init <directory> --- Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository.
>git config --global alias.<alias-name> <git-command> --- Create shortcut for a Git command. E.g. alias.glog “log --graph--oneline” will set ”git glog” equivalent to ”git log --graph --oneline.

===Stage===
>git add <directory> --- Stage all changes in <directory> for the next commit. Replace <directory> with a <file> to change a specific file.
>git status --- List which files are staged, unstaged, and untracked.

===Branch===
>git branch -a --- List all of the branches in your repo. Listet online repos aber erst dann auf, sobald 1x gefetcht wurde.
>git branch <branch> --- Add a <branch> argument to create a new branch with the name <branch>.
>git checkout -b <branch> --- Create and check out a new branch named <branch>.
>git checkout <branch> --- Switch to an existing branch.
>git merge <branch> --- Merge <branch> into the current branch.
>git checkout feature; git rebase main --- Packt den gesamten feature branch "on the tip of main branch". feature branch wird nun der neue Haupt branch.

===Updates===
>git commit -m "<message>" --- Commit the staged snapshot. Man muss dazu noch die file "stagen" mit gid add
>git commit -a -m "<message>" --- Commit durchgeführt ohne, dass man vorher hat stagen müssen.

===Remote Repository===
>git remote add <name> <url> --- Create a new connection to a remote repo. After adding a remote, you can use <name> as a shortcut for <url> in other commands.
>git remote add origin https://github.com/geronimoooooooo/proj.git
>git remote -v --- Listet alle remote repos auf
>git remote remove origin  --- removes the <url> origin assigned to the branch to be pushed to
>git fetch <remote> <branch> --- Fetches a specific <branch>, from the repo. Leave off <branch> to fetch all remote refs.
>git pull <remote> --- Fetch the specified remote’s copy of current branch and immediately merge it into the local copy.
>git push <remote> <branch> --- Push the branch to <remote>, along with necessary commits and objects. Creates named branch in the remote repo if it doesn’t exist.
>git pull origin master --allow-unrelated-histories --- Wird genommen, wenn 2 unterschiedliche repos, eines lokal, eines online, dann im lokalen vereint werden. Das online repo wird einfach in das lokale im root Ordner reinkopiert. Beschreibung: https://www.educative.io/answers/the-fatal-refusing-to-merge-unrelated-histories-git-error

===Metainformation===
>git log --- Display the entire commit history using the default format. For customization see additional options.
>git diff --- Show unstaged changes between your index and working directory.
>git diff HEAD --- Show difference between working directory and last commit.
>git diff --cached --- Show difference between staged changes and last commit
