named arrays ... Associative Arrays gibt es in JS nicht. Nur mit index möglich. In JavaScript, objects use named indexes.
typeof IDeinesArrays liefert object, da arrays object sind. mit Array.isArray(arrayBezeichner) kann man genauer nachschauen
arrayBezeichner instanceof Array;
declare arrays using const
const seit 2015; An array declared with const cannot be reassigned. Man kann aber die Werte in dem bestehenden Array ändern.
----------------------------------------------
links:
* http://www.w3schools.com/js/default.asp

invented by Brendan Eich in 1995
html = content, css = layout, javaScript = behavior
<script src="myScript.js"></script>
document.getElementById("demo").innerHTML = "Hello JavaScript";

<script>
document.write(5 + 6);//nur zum Testen hernehmen
console.log(5 + 6);
</script>

After the declaration, the variable has no value. (Technically it has the value of undefined).
A variable declared without a value will have the value undefined.

?	ternary operator, !=	not equal
var length = 16;                               // Number
var lastName = "Johnson";                      // String
var cars = ["Saab", "Volvo", "BMW"];           // Array
var x = {firstName:"John", lastName:"Doe"};    // Object

function name(parameter1, parameter2, parameter3) {
    code to be executed
}
Function parameters are the names listed in the function definition.
Function arguments are the real values received by the function when it is invoked.

<p onclick="this.innerHTML='GOOD JOB!'">Click me.</p>

All string methods return a new string. They don't modify the original string.
Formally said: Strings are immutable: Strings cannot be changed, only replaced.
JavaScript Numbers are Always 64-bit Floating Point
float32, double64 gleitkommazahlen


<script>
var text = '{"employees":[' +
'{"firstName":"John","lastName":"Doe" },' +
'{"firstName":"Anna","lastName":"Smith" },' +
'{"firstName":"Peter","lastName":"Jones" }]}';

obj = JSON.parse(text);
document.getElementById("demo").innerHTML =
obj.employees[1].firstName + " " + obj.employees[1].lastName;
</script>

var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.push("Lemon");                // adds a new element (Lemon) to fruits
fruits[fruits.length] = "Lemon";  


Arrays with named indexes are called associative arrays (or hashes).
JavaScript does not support arrays with named indexes.
In JavaScript, arrays always use numbered indexes.  

var points = new Array();         // Bad
var points = [];                  // Good 

obj = document.getElementById("demo");
obj.innerHTML = "Hello";

DOM Elemente müssen geladen worden sein, bevor JavaScript darauf zugreifen kann.
