https://github.com/Asabeneh/30-Days-Of-JavaScript/blob/master/readMe.md

+ >node -v
+ strg+shift+j: open console
+ Die Google V8 Engine übersetzt den Javascript Code in machine code.
+ In der Console (strg+shift+j) von Google JavaScript schreiben
+ //comments /* ... */
+ "" double quotes, '' single quotes, ` backtick für Strings
+ Use Visual Studio Code for JavaScript
+ Visual Studio Code extension: Live Server von Ritwick Dey
+ Add JavaScript to a web page as inline, internal, external script
+ JavaScript primitive data types: String, Number, Boolean, undefined, Null
++ undefined: Eine Var is undefined, wenn ihr gar kein value zugewiesen wird. a declared variable without a value
++ null: Eine Var is null, wenn der value leer ist (empty value: let emptyValue = null) 
+ Variables are containers of data. Variables are used to store data in a memory location. 
When a variable is declared, a memory location is reserved. When a variable is assigned to 
a value (data), the memory space will be filled with that data. 
To declare a variable, we use var, let, or const keywords.

###################################################################################
################################ 02 - Data Types ##################################
https://github.com/Asabeneh/30-Days-Of-JavaScript/blob/master/02_Day_Data_types/02_day_data_types.md

+ Everything in JavaScript is an object
+ immutable types (prmitive data types): sobald einmal der Wert zugewiesen wurde, kann dieser nicht mmehr verändert werden.
Möchte man den Wert verändern, dann wird ein komplett neuer Wert zugewiesen.
+ nicht primitive datentypen (reference types): hier kann der Wert verändert werden
++ Arrays
++ Objects
+ `String literal text ${expression}` String mit backtick
+ Auflistung fast aller Funktionen die auf String angewendet werden können
+ check the type of a var: typeof var
+ Casting: Converting von einem data type in einen anderen

#####################################################################################
################################ 04 - Conditionals ##################################

if(){}
else if(){}
else(){

termanry operator
isBool ? doTrue:doFalse
